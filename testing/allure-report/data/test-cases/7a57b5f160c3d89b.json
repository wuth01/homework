{
  "uid" : "7a57b5f160c3d89b",
  "name" : "test_div[float_fail]",
  "fullName" : "test_calc.TestCalc#test_div",
  "historyId" : "96e7e2ea5d3d543c4fa6f317196e2ee8",
  "time" : {
    "start" : 1603069343372,
    "stop" : 1603069343372,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 20.0 == -2.0\n +  where 20.0 = round(20.0, 2)",
  "statusTrace" : "self = <testing.test_calc.TestCalc object at 0x00000280BDBCDEB0>\ncal = <pythoncode.calculator.Calculator object at 0x00000280BDB369D0>, a = -2, b = -0.1, expect = -2.0\n\n    @pytest.mark.run(order=4)\n    @pytest.mark.parametrize('a,b,expect', get_Div_Datas()[0], ids=get_Div_Datas()[1])\n    def test_div(self, cal, a, b, expect):\n        if b == 0:\n            with pytest.raises(ZeroDivisionError):\n                result = cal.div(a, b)\n                print(result)\n        else:\n            result = cal.div(a, b)\n>           assert round(result, 2) == expect\nE           assert 20.0 == -2.0\nE            +  where 20.0 = round(20.0, 2)\n\ntest_calc.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "cal",
    "time" : {
      "start" : 1603069343036,
      "stop" : 1603069343036,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 20.0 == -2.0\n +  where 20.0 = round(20.0, 2)",
    "statusTrace" : "self = <testing.test_calc.TestCalc object at 0x00000280BDBCDEB0>\ncal = <pythoncode.calculator.Calculator object at 0x00000280BDB369D0>, a = -2, b = -0.1, expect = -2.0\n\n    @pytest.mark.run(order=4)\n    @pytest.mark.parametrize('a,b,expect', get_Div_Datas()[0], ids=get_Div_Datas()[1])\n    def test_div(self, cal, a, b, expect):\n        if b == 0:\n            with pytest.raises(ZeroDivisionError):\n                result = cal.div(a, b)\n                print(result)\n        else:\n            result = cal.div(a, b)\n>           assert round(result, 2) == expect\nE           assert 20.0 == -2.0\nE            +  where 20.0 = round(20.0, 2)\n\ntest_calc.py:57: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "918473e3c8aaa004",
      "name" : "stdout",
      "source" : "918473e3c8aaa004.txt",
      "type" : "text/plain",
      "size" : 5
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "cal::0",
    "time" : {
      "start" : 1603069343397,
      "stop" : 1603069343397,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=4)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "MS-NNZIEJQMVEHP"
  }, {
    "name" : "thread",
    "value" : "5200-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "-2"
  }, {
    "name" : "b",
    "value" : "-0.1"
  }, {
    "name" : "expect",
    "value" : "-2.0"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=4)" ]
  },
  "source" : "7a57b5f160c3d89b.json",
  "parameterValues" : [ "-2", "-0.1", "-2.0" ]
}